Terminals unused in grammar

   error_
   chan_
   const_
   defer_
   fallthrough_
   go_
   goto_
   import_
   interface_
   map_
   range_
   select_
   arrow_
   etc_


Grammar

    0 $accept: go_prog $end

    1 go_prog: pckg_decl ';' top_decl_list

    2 pckg_decl: package_ id_

    3 top_decl_list: top_decl_list top_decl
    4              | %empty

    5 top_decl: decl
    6         | func_decl

    7 decl: var_decl
    8     | type_decl

    9 func_decl: func_ func_name function
   10          | func_ func_name signature

   11 func_name: id_

   12 function: signature func_body

   13 func_body: block

   14 block: block_tmp ';'

   15 block_tmp: '{' stmt_list '}'

   16 signature: params
   17          | params result

   18 result: type

   19 params: '(' ')'
   20       | '(' params_list ')'

   21 params_list: params_list ',' params_decl
   22            | params_decl

   23 params_decl: id_list type

   24 var_decl: var_ var_spec ';'
   25         | var_ '(' var_spec_list ')' ';'

   26 type_decl: type_ type_spec ';'
   27          | type_ '(' type_spec_list ')' ';'

   28 type_spec_list: type_spec_list type_spec ';'
   29               | %empty

   30 type_spec: id_ type

   31 var_spec_list: var_spec_list var_spec ';'
   32              | %empty

   33 var_spec: id_list '=' expr_list
   34         | id_list type '=' expr_list
   35         | id_list type

   36 id_list: id_
   37        | id_list ',' id_

   38 type: basic_type
   39     | '[' ']' type
   40     | struct_ '{' field_decl_list '}'
   41     | '[' int_lit_ ']' type
   42     | id_

   43 basic_type: int_
   44           | float_
   45           | string_
   46           | rune_
   47           | bool_

   48 field_decl_list: field_decl_list field_decl
   49                | %empty

   50 field_decl: id_list type

   51 stmt_list: stmt_list stmt
   52          | %empty

   53 stmt: decl
   54     | block
   55     | print_stmt
   56     | println_stmt
   57     | return_stmt
   58     | if_stmt
   59     | simple_stmt
   60     | switch_stmt
   61     | for_stmt
   62     | break_stmt
   63     | cont_stmt

   64 simple_stmt: simple_stmt_v ';'

   65 simple_stmt_v: expr_stmt
   66              | inc_stmt
   67              | dec_stmt
   68              | assign_stmt
   69              | short_decl
   70              | %empty

   71 assign_stmt: expr_list '=' expr_list
   72            | expr assign_op expr

   73 short_decl: expr_list decla_ expr_list

   74 inc_stmt: expr incre_

   75 dec_stmt: expr decre_

   76 print_stmt: print_ '(' expr_list ')' ';'
   77           | print_ '(' ')' ';'

   78 println_stmt: println_ '(' expr_list ')' ';'
   79             | println_ '(' ')' ';'

   80 return_stmt: return_ expr ';'
   81            | return_ ';'

   82 if_stmt: if_ if_cond block
   83        | if_ if_cond block else_ else_block

   84 switch_stmt: switch_ switch_cond '{' case_clause_list '}'

   85 for_stmt: for_ for_clause block

   86 for_clause: condition
   87           | for_stmt_clause

   88 condition: expr
   89          | %empty

   90 for_stmt_clause: simple_stmt_v ';' condition ';' simple_stmt_v

   91 switch_cond: simple_stmt ';' expr
   92            | simple_stmt ';'
   93            | expr
   94            | %empty

   95 case_clause_list: case_clause_list case_clause
   96                 | %empty

   97 case_clause: switch_case ':' stmt_list

   98 switch_case: case_ expr_list
   99            | default_

  100 if_cond: expr
  101        | simple_stmt expr

  102 else_block: block
  103           | if_stmt

  104 break_stmt: break_ ';'

  105 cont_stmt: continue_ ';'

  106 assign_op: add_eq_
  107          | minus_eq_
  108          | mult_eq_
  109          | div_eq_
  110          | mod_eq_
  111          | amp_eq_
  112          | vb_eq_
  113          | caret_eq_
  114          | ls_eq_
  115          | rs_eq_
  116          | unknown_eq_

  117 expr_stmt: expr

  118 expr_list: expr
  119          | expr_list ',' expr

  120 operand: '(' expr ')'
  121        | operand_name
  122        | literal

  123 operand_name: id_

  124 literal: int_lit_
  125        | float_lit_
  126        | string_lit_
  127        | rune_lit_

  128 expr: primary_expr
  129     | expr '*' expr
  130     | expr '/' expr
  131     | expr '%' expr
  132     | expr '&' expr
  133     | expr unknown_ expr
  134     | expr ls_ expr
  135     | expr rs_ expr
  136     | expr '|' expr
  137     | expr '^' expr
  138     | expr '-' expr
  139     | expr '+' expr
  140     | expr equality_ expr
  141     | expr '<' expr
  142     | expr '>' expr
  143     | expr lteq_ expr
  144     | expr gteq_ expr
  145     | expr not_eq_ expr
  146     | expr and_ expr
  147     | expr or_ expr
  148     | append
  149     | unary_op expr

  150 unary_op: '+'
  151         | '-'
  152         | '^'
  153         | '!'

  154 func_call: primary_expr '(' expr_list ')'
  155          | primary_expr '(' ')'

  156 append: append_ '(' id_ ',' expr_list ')'

  157 primary_expr: operand
  158             | func_call
  159             | type_cast
  160             | primary_expr selector
  161             | primary_expr index
  162             | primary_expr slice

  163 selector: '.' id_

  164 type_cast: basic_type '(' expr ')'

  165 index: '[' expr ']'

  166 slice: '[' expr ':' expr ']'
  167      | '[' expr ':' ']'
  168      | '[' ':' expr ']'
  169      | '[' ':' ']'
  170      | '[' expr ':' expr ':' expr ']'
  171      | '[' ':' expr ':' expr ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 153
'%' (37) 131
'&' (38) 132
'(' (40) 19 20 25 27 76 77 78 79 120 154 155 156 164
')' (41) 19 20 25 27 76 77 78 79 120 154 155 156 164
'*' (42) 129
'+' (43) 139 150
',' (44) 21 37 119 156
'-' (45) 138 151
'.' (46) 163
'/' (47) 130
':' (58) 97 166 167 168 169 170 171
';' (59) 1 14 24 25 26 27 28 31 64 76 77 78 79 80 81 90 91 92 104 105
'<' (60) 141
'=' (61) 33 34 71
'>' (62) 142
'[' (91) 39 41 165 166 167 168 169 170 171
']' (93) 39 41 165 166 167 168 169 170 171
'^' (94) 137 152
'{' (123) 15 40 84
'|' (124) 136
'}' (125) 15 40 84
error (256)
error_ (258)
break_ (259) 104
case_ (260) 98
chan_ (261)
const_ (262)
continue_ (263) 105
default_ (264) 99
defer_ (265)
else_ (266) 83
fallthrough_ (267)
for_ (268) 85
func_ (269) 9 10
go_ (270)
goto_ (271)
if_ (272) 82 83
import_ (273)
interface_ (274)
map_ (275)
package_ (276) 2
range_ (277)
return_ (278) 80 81
select_ (279)
struct_ (280) 40
switch_ (281) 84
type_ (282) 26 27
var_ (283) 24 25
int_ (284) 43
float_ (285) 44
bool_ (286) 47
rune_ (287) 46
string_ (288) 45
print_ (289) 76 77
println_ (290) 78 79
append_ (291) 156
ls_ (292) 134
rs_ (293) 135
unknown_ (294) 133
add_eq_ (295) 106
minus_eq_ (296) 107
mult_eq_ (297) 108
div_eq_ (298) 109
mod_eq_ (299) 110
amp_eq_ (300) 111
vb_eq_ (301) 112
caret_eq_ (302) 113
ls_eq_ (303) 114
rs_eq_ (304) 115
unknown_eq_ (305) 116
and_ (306) 146
or_ (307) 147
arrow_ (308)
incre_ (309) 74
decre_ (310) 75
equality_ (311) 140
not_eq_ (312) 145
lteq_ (313) 143
gteq_ (314) 144
decla_ (315) 73
etc_ (316)
int_lit_ (317) 41 124
float_lit_ (318) 125
string_lit_ (319) 126
rune_lit_ (320) 127
id_ (321) 2 11 30 36 37 42 123 156 163
unary (322)


Nonterminals, with rules where they appear

$accept (90)
    on left: 0
go_prog (91)
    on left: 1, on right: 0
pckg_decl (92)
    on left: 2, on right: 1
top_decl_list (93)
    on left: 3 4, on right: 1 3
top_decl (94)
    on left: 5 6, on right: 3
decl (95)
    on left: 7 8, on right: 5 53
func_decl (96)
    on left: 9 10, on right: 6
func_name (97)
    on left: 11, on right: 9 10
function (98)
    on left: 12, on right: 9
func_body (99)
    on left: 13, on right: 12
block (100)
    on left: 14, on right: 13 54 82 83 85 102
block_tmp (101)
    on left: 15, on right: 14
signature (102)
    on left: 16 17, on right: 10 12
result (103)
    on left: 18, on right: 17
params (104)
    on left: 19 20, on right: 16 17
params_list (105)
    on left: 21 22, on right: 20 21
params_decl (106)
    on left: 23, on right: 21 22
var_decl (107)
    on left: 24 25, on right: 7
type_decl (108)
    on left: 26 27, on right: 8
type_spec_list (109)
    on left: 28 29, on right: 27 28
type_spec (110)
    on left: 30, on right: 26 28
var_spec_list (111)
    on left: 31 32, on right: 25 31
var_spec (112)
    on left: 33 34 35, on right: 24 31
id_list (113)
    on left: 36 37, on right: 23 33 34 35 37 50
type (114)
    on left: 38 39 40 41 42, on right: 18 23 30 34 35 39 41 50
basic_type (115)
    on left: 43 44 45 46 47, on right: 38 164
field_decl_list (116)
    on left: 48 49, on right: 40 48
field_decl (117)
    on left: 50, on right: 48
stmt_list (118)
    on left: 51 52, on right: 15 51 97
stmt (119)
    on left: 53 54 55 56 57 58 59 60 61 62 63, on right: 51
simple_stmt (120)
    on left: 64, on right: 59 91 92 101
simple_stmt_v (121)
    on left: 65 66 67 68 69 70, on right: 64 90
assign_stmt (122)
    on left: 71 72, on right: 68
short_decl (123)
    on left: 73, on right: 69
inc_stmt (124)
    on left: 74, on right: 66
dec_stmt (125)
    on left: 75, on right: 67
print_stmt (126)
    on left: 76 77, on right: 55
println_stmt (127)
    on left: 78 79, on right: 56
return_stmt (128)
    on left: 80 81, on right: 57
if_stmt (129)
    on left: 82 83, on right: 58 103
switch_stmt (130)
    on left: 84, on right: 60
for_stmt (131)
    on left: 85, on right: 61
for_clause (132)
    on left: 86 87, on right: 85
condition (133)
    on left: 88 89, on right: 86 90
for_stmt_clause (134)
    on left: 90, on right: 87
switch_cond (135)
    on left: 91 92 93 94, on right: 84
case_clause_list (136)
    on left: 95 96, on right: 84 95
case_clause (137)
    on left: 97, on right: 95
switch_case (138)
    on left: 98 99, on right: 97
if_cond (139)
    on left: 100 101, on right: 82 83
else_block (140)
    on left: 102 103, on right: 83
break_stmt (141)
    on left: 104, on right: 62
cont_stmt (142)
    on left: 105, on right: 63
assign_op (143)
    on left: 106 107 108 109 110 111 112 113 114 115 116, on right:
    72
expr_stmt (144)
    on left: 117, on right: 65
expr_list (145)
    on left: 118 119, on right: 33 34 71 73 76 78 98 119 154 156
operand (146)
    on left: 120 121 122, on right: 157
operand_name (147)
    on left: 123, on right: 121
literal (148)
    on left: 124 125 126 127, on right: 122
expr (149)
    on left: 128 129 130 131 132 133 134 135 136 137 138 139 140 141
    142 143 144 145 146 147 148 149, on right: 72 74 75 80 88 91 93
    100 101 117 118 119 120 129 130 131 132 133 134 135 136 137 138
    139 140 141 142 143 144 145 146 147 149 164 165 166 167 168 170
    171
unary_op (150)
    on left: 150 151 152 153, on right: 149
func_call (151)
    on left: 154 155, on right: 158
append (152)
    on left: 156, on right: 148
primary_expr (153)
    on left: 157 158 159 160 161 162, on right: 128 154 155 160 161
    162
selector (154)
    on left: 163, on right: 160
type_cast (155)
    on left: 164, on right: 159
index (156)
    on left: 165, on right: 161
slice (157)
    on left: 166 167 168 169 170 171, on right: 162


State 0

    0 $accept: . go_prog $end

    package_  shift, and go to state 1

    go_prog    go to state 2
    pckg_decl  go to state 3


State 1

    2 pckg_decl: package_ . id_

    id_  shift, and go to state 4


State 2

    0 $accept: go_prog . $end

    $end  shift, and go to state 5


State 3

    1 go_prog: pckg_decl . ';' top_decl_list

    ';'  shift, and go to state 6


State 4

    2 pckg_decl: package_ id_ .

    $default  reduce using rule 2 (pckg_decl)


State 5

    0 $accept: go_prog $end .

    $default  accept


State 6

    1 go_prog: pckg_decl ';' . top_decl_list

    $default  reduce using rule 4 (top_decl_list)

    top_decl_list  go to state 7


State 7

    1 go_prog: pckg_decl ';' top_decl_list .
    3 top_decl_list: top_decl_list . top_decl

    func_  shift, and go to state 8
    type_  shift, and go to state 9
    var_   shift, and go to state 10

    $default  reduce using rule 1 (go_prog)

    top_decl   go to state 11
    decl       go to state 12
    func_decl  go to state 13
    var_decl   go to state 14
    type_decl  go to state 15


State 8

    9 func_decl: func_ . func_name function
   10          | func_ . func_name signature

    id_  shift, and go to state 16

    func_name  go to state 17


State 9

   26 type_decl: type_ . type_spec ';'
   27          | type_ . '(' type_spec_list ')' ';'

    '('  shift, and go to state 18
    id_  shift, and go to state 19

    type_spec  go to state 20


State 10

   24 var_decl: var_ . var_spec ';'
   25         | var_ . '(' var_spec_list ')' ';'

    '('  shift, and go to state 21
    id_  shift, and go to state 22

    var_spec  go to state 23
    id_list   go to state 24


State 11

    3 top_decl_list: top_decl_list top_decl .

    $default  reduce using rule 3 (top_decl_list)


State 12

    5 top_decl: decl .

    $default  reduce using rule 5 (top_decl)


State 13

    6 top_decl: func_decl .

    $default  reduce using rule 6 (top_decl)


State 14

    7 decl: var_decl .

    $default  reduce using rule 7 (decl)


State 15

    8 decl: type_decl .

    $default  reduce using rule 8 (decl)


State 16

   11 func_name: id_ .

    $default  reduce using rule 11 (func_name)


State 17

    9 func_decl: func_ func_name . function
   10          | func_ func_name . signature

    '('  shift, and go to state 25

    function   go to state 26
    signature  go to state 27
    params     go to state 28


State 18

   27 type_decl: type_ '(' . type_spec_list ')' ';'

    $default  reduce using rule 29 (type_spec_list)

    type_spec_list  go to state 29


State 19

   30 type_spec: id_ . type

    struct_  shift, and go to state 30
    int_     shift, and go to state 31
    float_   shift, and go to state 32
    bool_    shift, and go to state 33
    rune_    shift, and go to state 34
    string_  shift, and go to state 35
    '['      shift, and go to state 36
    id_      shift, and go to state 37

    type        go to state 38
    basic_type  go to state 39


State 20

   26 type_decl: type_ type_spec . ';'

    ';'  shift, and go to state 40


State 21

   25 var_decl: var_ '(' . var_spec_list ')' ';'

    $default  reduce using rule 32 (var_spec_list)

    var_spec_list  go to state 41


State 22

   36 id_list: id_ .

    $default  reduce using rule 36 (id_list)


State 23

   24 var_decl: var_ var_spec . ';'

    ';'  shift, and go to state 42


State 24

   33 var_spec: id_list . '=' expr_list
   34         | id_list . type '=' expr_list
   35         | id_list . type
   37 id_list: id_list . ',' id_

    struct_  shift, and go to state 30
    int_     shift, and go to state 31
    float_   shift, and go to state 32
    bool_    shift, and go to state 33
    rune_    shift, and go to state 34
    string_  shift, and go to state 35
    '='      shift, and go to state 43
    '['      shift, and go to state 36
    ','      shift, and go to state 44
    id_      shift, and go to state 37

    type        go to state 45
    basic_type  go to state 39


State 25

   19 params: '(' . ')'
   20       | '(' . params_list ')'

    ')'  shift, and go to state 46
    id_  shift, and go to state 22

    params_list  go to state 47
    params_decl  go to state 48
    id_list      go to state 49


State 26

    9 func_decl: func_ func_name function .

    $default  reduce using rule 9 (func_decl)


State 27

   10 func_decl: func_ func_name signature .
   12 function: signature . func_body

    '{'  shift, and go to state 50

    $default  reduce using rule 10 (func_decl)

    func_body  go to state 51
    block      go to state 52
    block_tmp  go to state 53


State 28

   16 signature: params .
   17          | params . result

    struct_  shift, and go to state 30
    int_     shift, and go to state 31
    float_   shift, and go to state 32
    bool_    shift, and go to state 33
    rune_    shift, and go to state 34
    string_  shift, and go to state 35
    '['      shift, and go to state 36
    id_      shift, and go to state 37

    $default  reduce using rule 16 (signature)

    result      go to state 54
    type        go to state 55
    basic_type  go to state 39


State 29

   27 type_decl: type_ '(' type_spec_list . ')' ';'
   28 type_spec_list: type_spec_list . type_spec ';'

    ')'  shift, and go to state 56
    id_  shift, and go to state 19

    type_spec  go to state 57


State 30

   40 type: struct_ . '{' field_decl_list '}'

    '{'  shift, and go to state 58


State 31

   43 basic_type: int_ .

    $default  reduce using rule 43 (basic_type)


State 32

   44 basic_type: float_ .

    $default  reduce using rule 44 (basic_type)


State 33

   47 basic_type: bool_ .

    $default  reduce using rule 47 (basic_type)


State 34

   46 basic_type: rune_ .

    $default  reduce using rule 46 (basic_type)


State 35

   45 basic_type: string_ .

    $default  reduce using rule 45 (basic_type)


State 36

   39 type: '[' . ']' type
   41     | '[' . int_lit_ ']' type

    ']'       shift, and go to state 59
    int_lit_  shift, and go to state 60


State 37

   42 type: id_ .

    $default  reduce using rule 42 (type)


State 38

   30 type_spec: id_ type .

    $default  reduce using rule 30 (type_spec)


State 39

   38 type: basic_type .

    $default  reduce using rule 38 (type)


State 40

   26 type_decl: type_ type_spec ';' .

    $default  reduce using rule 26 (type_decl)


State 41

   25 var_decl: var_ '(' var_spec_list . ')' ';'
   31 var_spec_list: var_spec_list . var_spec ';'

    ')'  shift, and go to state 61
    id_  shift, and go to state 22

    var_spec  go to state 62
    id_list   go to state 24


State 42

   24 var_decl: var_ var_spec ';' .

    $default  reduce using rule 24 (var_decl)


State 43

   33 var_spec: id_list '=' . expr_list

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    expr_list     go to state 75
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 79
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 44

   37 id_list: id_list ',' . id_

    id_  shift, and go to state 85


State 45

   34 var_spec: id_list type . '=' expr_list
   35         | id_list type .

    '='  shift, and go to state 86

    $default  reduce using rule 35 (var_spec)


State 46

   19 params: '(' ')' .

    $default  reduce using rule 19 (params)


State 47

   20 params: '(' params_list . ')'
   21 params_list: params_list . ',' params_decl

    ')'  shift, and go to state 87
    ','  shift, and go to state 88


State 48

   22 params_list: params_decl .

    $default  reduce using rule 22 (params_list)


State 49

   23 params_decl: id_list . type
   37 id_list: id_list . ',' id_

    struct_  shift, and go to state 30
    int_     shift, and go to state 31
    float_   shift, and go to state 32
    bool_    shift, and go to state 33
    rune_    shift, and go to state 34
    string_  shift, and go to state 35
    '['      shift, and go to state 36
    ','      shift, and go to state 44
    id_      shift, and go to state 37

    type        go to state 89
    basic_type  go to state 39


State 50

   15 block_tmp: '{' . stmt_list '}'

    $default  reduce using rule 52 (stmt_list)

    stmt_list  go to state 90


State 51

   12 function: signature func_body .

    $default  reduce using rule 12 (function)


State 52

   13 func_body: block .

    $default  reduce using rule 13 (func_body)


State 53

   14 block: block_tmp . ';'

    ';'  shift, and go to state 91


State 54

   17 signature: params result .

    $default  reduce using rule 17 (signature)


State 55

   18 result: type .

    $default  reduce using rule 18 (result)


State 56

   27 type_decl: type_ '(' type_spec_list ')' . ';'

    ';'  shift, and go to state 92


State 57

   28 type_spec_list: type_spec_list type_spec . ';'

    ';'  shift, and go to state 93


State 58

   40 type: struct_ '{' . field_decl_list '}'

    $default  reduce using rule 49 (field_decl_list)

    field_decl_list  go to state 94


State 59

   39 type: '[' ']' . type

    struct_  shift, and go to state 30
    int_     shift, and go to state 31
    float_   shift, and go to state 32
    bool_    shift, and go to state 33
    rune_    shift, and go to state 34
    string_  shift, and go to state 35
    '['      shift, and go to state 36
    id_      shift, and go to state 37

    type        go to state 95
    basic_type  go to state 39


State 60

   41 type: '[' int_lit_ . ']' type

    ']'  shift, and go to state 96


State 61

   25 var_decl: var_ '(' var_spec_list ')' . ';'

    ';'  shift, and go to state 97


State 62

   31 var_spec_list: var_spec_list var_spec . ';'

    ';'  shift, and go to state 98


State 63

  156 append: append_ . '(' id_ ',' expr_list ')'

    '('  shift, and go to state 99


State 64

  150 unary_op: '+' .

    $default  reduce using rule 150 (unary_op)


State 65

  151 unary_op: '-' .

    $default  reduce using rule 151 (unary_op)


State 66

  152 unary_op: '^' .

    $default  reduce using rule 152 (unary_op)


State 67

  153 unary_op: '!' .

    $default  reduce using rule 153 (unary_op)


State 68

  120 operand: '(' . expr ')'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 100
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 69

  124 literal: int_lit_ .

    $default  reduce using rule 124 (literal)


State 70

  125 literal: float_lit_ .

    $default  reduce using rule 125 (literal)


State 71

  126 literal: string_lit_ .

    $default  reduce using rule 126 (literal)


State 72

  127 literal: rune_lit_ .

    $default  reduce using rule 127 (literal)


State 73

  123 operand_name: id_ .

    $default  reduce using rule 123 (operand_name)


State 74

  164 type_cast: basic_type . '(' expr ')'

    '('  shift, and go to state 101


State 75

   33 var_spec: id_list '=' expr_list .
  119 expr_list: expr_list . ',' expr

    ','  shift, and go to state 102

    $default  reduce using rule 33 (var_spec)


State 76

  157 primary_expr: operand .

    $default  reduce using rule 157 (primary_expr)


State 77

  121 operand: operand_name .

    $default  reduce using rule 121 (operand)


State 78

  122 operand: literal .

    $default  reduce using rule 122 (operand)


State 79

  118 expr_list: expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    '|'        shift, and go to state 121

    $default  reduce using rule 118 (expr_list)


State 80

  149 expr: unary_op . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 122
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 81

  158 primary_expr: func_call .

    $default  reduce using rule 158 (primary_expr)


State 82

  148 expr: append .

    $default  reduce using rule 148 (expr)


State 83

  128 expr: primary_expr .
  154 func_call: primary_expr . '(' expr_list ')'
  155          | primary_expr . '(' ')'
  160 primary_expr: primary_expr . selector
  161             | primary_expr . index
  162             | primary_expr . slice

    '['  shift, and go to state 123
    '('  shift, and go to state 124
    '.'  shift, and go to state 125

    $default  reduce using rule 128 (expr)

    selector  go to state 126
    index     go to state 127
    slice     go to state 128


State 84

  159 primary_expr: type_cast .

    $default  reduce using rule 159 (primary_expr)


State 85

   37 id_list: id_list ',' id_ .

    $default  reduce using rule 37 (id_list)


State 86

   34 var_spec: id_list type '=' . expr_list

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    expr_list     go to state 129
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 79
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 87

   20 params: '(' params_list ')' .

    $default  reduce using rule 20 (params)


State 88

   21 params_list: params_list ',' . params_decl

    id_  shift, and go to state 22

    params_decl  go to state 130
    id_list      go to state 49


State 89

   23 params_decl: id_list type .

    $default  reduce using rule 23 (params_decl)


State 90

   15 block_tmp: '{' stmt_list . '}'
   51 stmt_list: stmt_list . stmt

    break_       shift, and go to state 131
    continue_    shift, and go to state 132
    for_         shift, and go to state 133
    if_          shift, and go to state 134
    return_      shift, and go to state 135
    switch_      shift, and go to state 136
    type_        shift, and go to state 9
    var_         shift, and go to state 10
    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    print_       shift, and go to state 137
    println_     shift, and go to state 138
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '}'          shift, and go to state 139
    '{'          shift, and go to state 50
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    $default  reduce using rule 70 (simple_stmt_v)

    decl           go to state 140
    block          go to state 141
    block_tmp      go to state 53
    var_decl       go to state 14
    type_decl      go to state 15
    basic_type     go to state 74
    stmt           go to state 142
    simple_stmt    go to state 143
    simple_stmt_v  go to state 144
    assign_stmt    go to state 145
    short_decl     go to state 146
    inc_stmt       go to state 147
    dec_stmt       go to state 148
    print_stmt     go to state 149
    println_stmt   go to state 150
    return_stmt    go to state 151
    if_stmt        go to state 152
    switch_stmt    go to state 153
    for_stmt       go to state 154
    break_stmt     go to state 155
    cont_stmt      go to state 156
    expr_stmt      go to state 157
    expr_list      go to state 158
    operand        go to state 76
    operand_name   go to state 77
    literal        go to state 78
    expr           go to state 159
    unary_op       go to state 80
    func_call      go to state 81
    append         go to state 82
    primary_expr   go to state 83
    type_cast      go to state 84


State 91

   14 block: block_tmp ';' .

    $default  reduce using rule 14 (block)


State 92

   27 type_decl: type_ '(' type_spec_list ')' ';' .

    $default  reduce using rule 27 (type_decl)


State 93

   28 type_spec_list: type_spec_list type_spec ';' .

    $default  reduce using rule 28 (type_spec_list)


State 94

   40 type: struct_ '{' field_decl_list . '}'
   48 field_decl_list: field_decl_list . field_decl

    '}'  shift, and go to state 160
    id_  shift, and go to state 22

    id_list     go to state 161
    field_decl  go to state 162


State 95

   39 type: '[' ']' type .

    $default  reduce using rule 39 (type)


State 96

   41 type: '[' int_lit_ ']' . type

    struct_  shift, and go to state 30
    int_     shift, and go to state 31
    float_   shift, and go to state 32
    bool_    shift, and go to state 33
    rune_    shift, and go to state 34
    string_  shift, and go to state 35
    '['      shift, and go to state 36
    id_      shift, and go to state 37

    type        go to state 163
    basic_type  go to state 39


State 97

   25 var_decl: var_ '(' var_spec_list ')' ';' .

    $default  reduce using rule 25 (var_decl)


State 98

   31 var_spec_list: var_spec_list var_spec ';' .

    $default  reduce using rule 31 (var_spec_list)


State 99

  156 append: append_ '(' . id_ ',' expr_list ')'

    id_  shift, and go to state 164


State 100

  120 operand: '(' expr . ')'
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    ')'        shift, and go to state 165
    '|'        shift, and go to state 121


State 101

  164 type_cast: basic_type '(' . expr ')'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 166
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 102

  119 expr_list: expr_list ',' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 167
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 103

  139 expr: expr '+' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 168
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 104

  138 expr: expr '-' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 169
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 105

  129 expr: expr '*' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 170
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 106

  130 expr: expr '/' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 171
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 107

  131 expr: expr '%' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 172
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 108

  132 expr: expr '&' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 173
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 109

  137 expr: expr '^' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 174
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 110

  134 expr: expr ls_ . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 175
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 111

  135 expr: expr rs_ . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 176
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 112

  133 expr: expr unknown_ . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 177
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 113

  146 expr: expr and_ . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 178
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 114

  147 expr: expr or_ . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 179
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 115

  140 expr: expr equality_ . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 180
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 116

  141 expr: expr '<' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 181
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 117

  142 expr: expr '>' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 182
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 118

  145 expr: expr not_eq_ . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 183
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 119

  143 expr: expr lteq_ . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 184
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 120

  144 expr: expr gteq_ . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 185
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 121

  136 expr: expr '|' . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 186
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 122

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr
  149     | unary_op expr .

    $default  reduce using rule 149 (expr)


State 123

  165 index: '[' . expr ']'
  166 slice: '[' . expr ':' expr ']'
  167      | '[' . expr ':' ']'
  168      | '[' . ':' expr ']'
  169      | '[' . ':' ']'
  170      | '[' . expr ':' expr ':' expr ']'
  171      | '[' . ':' expr ':' expr ']'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    ':'          shift, and go to state 187
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 188
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 124

  154 func_call: primary_expr '(' . expr_list ')'
  155          | primary_expr '(' . ')'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    ')'          shift, and go to state 189
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    expr_list     go to state 190
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 79
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 125

  163 selector: '.' . id_

    id_  shift, and go to state 191


State 126

  160 primary_expr: primary_expr selector .

    $default  reduce using rule 160 (primary_expr)


State 127

  161 primary_expr: primary_expr index .

    $default  reduce using rule 161 (primary_expr)


State 128

  162 primary_expr: primary_expr slice .

    $default  reduce using rule 162 (primary_expr)


State 129

   34 var_spec: id_list type '=' expr_list .
  119 expr_list: expr_list . ',' expr

    ','  shift, and go to state 102

    $default  reduce using rule 34 (var_spec)


State 130

   21 params_list: params_list ',' params_decl .

    $default  reduce using rule 21 (params_list)


State 131

  104 break_stmt: break_ . ';'

    ';'  shift, and go to state 192


State 132

  105 cont_stmt: continue_ . ';'

    ';'  shift, and go to state 193


State 133

   85 for_stmt: for_ . for_clause block

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    '{'       reduce using rule 89 (condition)
    $default  reduce using rule 70 (simple_stmt_v)

    basic_type       go to state 74
    simple_stmt_v    go to state 194
    assign_stmt      go to state 145
    short_decl       go to state 146
    inc_stmt         go to state 147
    dec_stmt         go to state 148
    for_clause       go to state 195
    condition        go to state 196
    for_stmt_clause  go to state 197
    expr_stmt        go to state 157
    expr_list        go to state 158
    operand          go to state 76
    operand_name     go to state 77
    literal          go to state 78
    expr             go to state 198
    unary_op         go to state 80
    func_call        go to state 81
    append           go to state 82
    primary_expr     go to state 83
    type_cast        go to state 84


State 134

   82 if_stmt: if_ . if_cond block
   83        | if_ . if_cond block else_ else_block

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    $default  reduce using rule 70 (simple_stmt_v)

    basic_type     go to state 74
    simple_stmt    go to state 199
    simple_stmt_v  go to state 144
    assign_stmt    go to state 145
    short_decl     go to state 146
    inc_stmt       go to state 147
    dec_stmt       go to state 148
    if_cond        go to state 200
    expr_stmt      go to state 157
    expr_list      go to state 158
    operand        go to state 76
    operand_name   go to state 77
    literal        go to state 78
    expr           go to state 201
    unary_op       go to state 80
    func_call      go to state 81
    append         go to state 82
    primary_expr   go to state 83
    type_cast      go to state 84


State 135

   80 return_stmt: return_ . expr ';'
   81            | return_ . ';'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    ';'          shift, and go to state 202
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 203
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 136

   84 switch_stmt: switch_ . switch_cond '{' case_clause_list '}'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    '{'       reduce using rule 94 (switch_cond)
    $default  reduce using rule 70 (simple_stmt_v)

    basic_type     go to state 74
    simple_stmt    go to state 204
    simple_stmt_v  go to state 144
    assign_stmt    go to state 145
    short_decl     go to state 146
    inc_stmt       go to state 147
    dec_stmt       go to state 148
    switch_cond    go to state 205
    expr_stmt      go to state 157
    expr_list      go to state 158
    operand        go to state 76
    operand_name   go to state 77
    literal        go to state 78
    expr           go to state 206
    unary_op       go to state 80
    func_call      go to state 81
    append         go to state 82
    primary_expr   go to state 83
    type_cast      go to state 84


State 137

   76 print_stmt: print_ . '(' expr_list ')' ';'
   77           | print_ . '(' ')' ';'

    '('  shift, and go to state 207


State 138

   78 println_stmt: println_ . '(' expr_list ')' ';'
   79             | println_ . '(' ')' ';'

    '('  shift, and go to state 208


State 139

   15 block_tmp: '{' stmt_list '}' .

    $default  reduce using rule 15 (block_tmp)


State 140

   53 stmt: decl .

    $default  reduce using rule 53 (stmt)


State 141

   54 stmt: block .

    $default  reduce using rule 54 (stmt)


State 142

   51 stmt_list: stmt_list stmt .

    $default  reduce using rule 51 (stmt_list)


State 143

   59 stmt: simple_stmt .

    $default  reduce using rule 59 (stmt)


State 144

   64 simple_stmt: simple_stmt_v . ';'

    ';'  shift, and go to state 209


State 145

   68 simple_stmt_v: assign_stmt .

    $default  reduce using rule 68 (simple_stmt_v)


State 146

   69 simple_stmt_v: short_decl .

    $default  reduce using rule 69 (simple_stmt_v)


State 147

   66 simple_stmt_v: inc_stmt .

    $default  reduce using rule 66 (simple_stmt_v)


State 148

   67 simple_stmt_v: dec_stmt .

    $default  reduce using rule 67 (simple_stmt_v)


State 149

   55 stmt: print_stmt .

    $default  reduce using rule 55 (stmt)


State 150

   56 stmt: println_stmt .

    $default  reduce using rule 56 (stmt)


State 151

   57 stmt: return_stmt .

    $default  reduce using rule 57 (stmt)


State 152

   58 stmt: if_stmt .

    $default  reduce using rule 58 (stmt)


State 153

   60 stmt: switch_stmt .

    $default  reduce using rule 60 (stmt)


State 154

   61 stmt: for_stmt .

    $default  reduce using rule 61 (stmt)


State 155

   62 stmt: break_stmt .

    $default  reduce using rule 62 (stmt)


State 156

   63 stmt: cont_stmt .

    $default  reduce using rule 63 (stmt)


State 157

   65 simple_stmt_v: expr_stmt .

    $default  reduce using rule 65 (simple_stmt_v)


State 158

   71 assign_stmt: expr_list . '=' expr_list
   73 short_decl: expr_list . decla_ expr_list
  119 expr_list: expr_list . ',' expr

    '='     shift, and go to state 210
    decla_  shift, and go to state 211
    ','     shift, and go to state 102


State 159

   72 assign_stmt: expr . assign_op expr
   74 inc_stmt: expr . incre_
   75 dec_stmt: expr . decre_
  117 expr_stmt: expr .
  118 expr_list: expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'          shift, and go to state 103
    '-'          shift, and go to state 104
    '*'          shift, and go to state 105
    '/'          shift, and go to state 106
    '%'          shift, and go to state 107
    '&'          shift, and go to state 108
    '^'          shift, and go to state 109
    ls_          shift, and go to state 110
    rs_          shift, and go to state 111
    unknown_     shift, and go to state 112
    add_eq_      shift, and go to state 212
    minus_eq_    shift, and go to state 213
    mult_eq_     shift, and go to state 214
    div_eq_      shift, and go to state 215
    mod_eq_      shift, and go to state 216
    amp_eq_      shift, and go to state 217
    vb_eq_       shift, and go to state 218
    caret_eq_    shift, and go to state 219
    ls_eq_       shift, and go to state 220
    rs_eq_       shift, and go to state 221
    unknown_eq_  shift, and go to state 222
    and_         shift, and go to state 113
    or_          shift, and go to state 114
    incre_       shift, and go to state 223
    decre_       shift, and go to state 224
    equality_    shift, and go to state 115
    '<'          shift, and go to state 116
    '>'          shift, and go to state 117
    not_eq_      shift, and go to state 118
    lteq_        shift, and go to state 119
    gteq_        shift, and go to state 120
    '|'          shift, and go to state 121

    '{'       reduce using rule 117 (expr_stmt)
    ';'       reduce using rule 117 (expr_stmt)
    $default  reduce using rule 118 (expr_list)

    assign_op  go to state 225


State 160

   40 type: struct_ '{' field_decl_list '}' .

    $default  reduce using rule 40 (type)


State 161

   37 id_list: id_list . ',' id_
   50 field_decl: id_list . type

    struct_  shift, and go to state 30
    int_     shift, and go to state 31
    float_   shift, and go to state 32
    bool_    shift, and go to state 33
    rune_    shift, and go to state 34
    string_  shift, and go to state 35
    '['      shift, and go to state 36
    ','      shift, and go to state 44
    id_      shift, and go to state 37

    type        go to state 226
    basic_type  go to state 39


State 162

   48 field_decl_list: field_decl_list field_decl .

    $default  reduce using rule 48 (field_decl_list)


State 163

   41 type: '[' int_lit_ ']' type .

    $default  reduce using rule 41 (type)


State 164

  156 append: append_ '(' id_ . ',' expr_list ')'

    ','  shift, and go to state 227


State 165

  120 operand: '(' expr ')' .

    $default  reduce using rule 120 (operand)


State 166

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr
  164 type_cast: basic_type '(' expr . ')'

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    ')'        shift, and go to state 228
    '|'        shift, and go to state 121


State 167

  119 expr_list: expr_list ',' expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    '|'        shift, and go to state 121

    $default  reduce using rule 119 (expr_list)


State 168

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  139     | expr '+' expr .
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112

    $default  reduce using rule 139 (expr)


State 169

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  138     | expr '-' expr .
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112

    $default  reduce using rule 138 (expr)


State 170

  129 expr: expr . '*' expr
  129     | expr '*' expr .
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    $default  reduce using rule 129 (expr)


State 171

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  130     | expr '/' expr .
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    $default  reduce using rule 130 (expr)


State 172

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  131     | expr '%' expr .
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    $default  reduce using rule 131 (expr)


State 173

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  132     | expr '&' expr .
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    $default  reduce using rule 132 (expr)


State 174

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  137     | expr '^' expr .
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112

    $default  reduce using rule 137 (expr)


State 175

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  134     | expr ls_ expr .
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    $default  reduce using rule 134 (expr)


State 176

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  135     | expr rs_ expr .
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    $default  reduce using rule 135 (expr)


State 177

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  133     | expr unknown_ expr .
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    $default  reduce using rule 133 (expr)


State 178

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  146     | expr and_ expr .
  147     | expr . or_ expr

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    '|'        shift, and go to state 121

    $default  reduce using rule 146 (expr)


State 179

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr
  147     | expr or_ expr .

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    '|'        shift, and go to state 121

    $default  reduce using rule 147 (expr)


State 180

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  140     | expr equality_ expr .
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    '^'       shift, and go to state 109
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112
    '|'       shift, and go to state 121

    $default  reduce using rule 140 (expr)


State 181

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  141     | expr '<' expr .
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    '^'       shift, and go to state 109
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112
    '|'       shift, and go to state 121

    $default  reduce using rule 141 (expr)


State 182

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  142     | expr '>' expr .
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    '^'       shift, and go to state 109
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112
    '|'       shift, and go to state 121

    $default  reduce using rule 142 (expr)


State 183

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  145     | expr not_eq_ expr .
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    '^'       shift, and go to state 109
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112
    '|'       shift, and go to state 121

    $default  reduce using rule 145 (expr)


State 184

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  143     | expr lteq_ expr .
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    '^'       shift, and go to state 109
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112
    '|'       shift, and go to state 121

    $default  reduce using rule 143 (expr)


State 185

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  144     | expr gteq_ expr .
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    '^'       shift, and go to state 109
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112
    '|'       shift, and go to state 121

    $default  reduce using rule 144 (expr)


State 186

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  136     | expr '|' expr .
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107
    '&'       shift, and go to state 108
    ls_       shift, and go to state 110
    rs_       shift, and go to state 111
    unknown_  shift, and go to state 112

    $default  reduce using rule 136 (expr)


State 187

  168 slice: '[' ':' . expr ']'
  169      | '[' ':' . ']'
  171      | '[' ':' . expr ':' expr ']'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    ']'          shift, and go to state 229
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 230
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 188

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr
  165 index: '[' expr . ']'
  166 slice: '[' expr . ':' expr ']'
  167      | '[' expr . ':' ']'
  170      | '[' expr . ':' expr ':' expr ']'

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    ']'        shift, and go to state 231
    ':'        shift, and go to state 232
    '|'        shift, and go to state 121


State 189

  155 func_call: primary_expr '(' ')' .

    $default  reduce using rule 155 (func_call)


State 190

  119 expr_list: expr_list . ',' expr
  154 func_call: primary_expr '(' expr_list . ')'

    ')'  shift, and go to state 233
    ','  shift, and go to state 102


State 191

  163 selector: '.' id_ .

    $default  reduce using rule 163 (selector)


State 192

  104 break_stmt: break_ ';' .

    $default  reduce using rule 104 (break_stmt)


State 193

  105 cont_stmt: continue_ ';' .

    $default  reduce using rule 105 (cont_stmt)


State 194

   90 for_stmt_clause: simple_stmt_v . ';' condition ';' simple_stmt_v

    ';'  shift, and go to state 234


State 195

   85 for_stmt: for_ for_clause . block

    '{'  shift, and go to state 50

    block      go to state 235
    block_tmp  go to state 53


State 196

   86 for_clause: condition .

    $default  reduce using rule 86 (for_clause)


State 197

   87 for_clause: for_stmt_clause .

    $default  reduce using rule 87 (for_clause)


State 198

   72 assign_stmt: expr . assign_op expr
   74 inc_stmt: expr . incre_
   75 dec_stmt: expr . decre_
   88 condition: expr .
  117 expr_stmt: expr .
  118 expr_list: expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'          shift, and go to state 103
    '-'          shift, and go to state 104
    '*'          shift, and go to state 105
    '/'          shift, and go to state 106
    '%'          shift, and go to state 107
    '&'          shift, and go to state 108
    '^'          shift, and go to state 109
    ls_          shift, and go to state 110
    rs_          shift, and go to state 111
    unknown_     shift, and go to state 112
    add_eq_      shift, and go to state 212
    minus_eq_    shift, and go to state 213
    mult_eq_     shift, and go to state 214
    div_eq_      shift, and go to state 215
    mod_eq_      shift, and go to state 216
    amp_eq_      shift, and go to state 217
    vb_eq_       shift, and go to state 218
    caret_eq_    shift, and go to state 219
    ls_eq_       shift, and go to state 220
    rs_eq_       shift, and go to state 221
    unknown_eq_  shift, and go to state 222
    and_         shift, and go to state 113
    or_          shift, and go to state 114
    incre_       shift, and go to state 223
    decre_       shift, and go to state 224
    equality_    shift, and go to state 115
    '<'          shift, and go to state 116
    '>'          shift, and go to state 117
    not_eq_      shift, and go to state 118
    lteq_        shift, and go to state 119
    gteq_        shift, and go to state 120
    '|'          shift, and go to state 121

    '{'       reduce using rule 88 (condition)
    ';'       reduce using rule 117 (expr_stmt)
    $default  reduce using rule 118 (expr_list)

    assign_op  go to state 225


State 199

  101 if_cond: simple_stmt . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 236
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 200

   82 if_stmt: if_ if_cond . block
   83        | if_ if_cond . block else_ else_block

    '{'  shift, and go to state 50

    block      go to state 237
    block_tmp  go to state 53


State 201

   72 assign_stmt: expr . assign_op expr
   74 inc_stmt: expr . incre_
   75 dec_stmt: expr . decre_
  100 if_cond: expr .
  117 expr_stmt: expr .
  118 expr_list: expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'          shift, and go to state 103
    '-'          shift, and go to state 104
    '*'          shift, and go to state 105
    '/'          shift, and go to state 106
    '%'          shift, and go to state 107
    '&'          shift, and go to state 108
    '^'          shift, and go to state 109
    ls_          shift, and go to state 110
    rs_          shift, and go to state 111
    unknown_     shift, and go to state 112
    add_eq_      shift, and go to state 212
    minus_eq_    shift, and go to state 213
    mult_eq_     shift, and go to state 214
    div_eq_      shift, and go to state 215
    mod_eq_      shift, and go to state 216
    amp_eq_      shift, and go to state 217
    vb_eq_       shift, and go to state 218
    caret_eq_    shift, and go to state 219
    ls_eq_       shift, and go to state 220
    rs_eq_       shift, and go to state 221
    unknown_eq_  shift, and go to state 222
    and_         shift, and go to state 113
    or_          shift, and go to state 114
    incre_       shift, and go to state 223
    decre_       shift, and go to state 224
    equality_    shift, and go to state 115
    '<'          shift, and go to state 116
    '>'          shift, and go to state 117
    not_eq_      shift, and go to state 118
    lteq_        shift, and go to state 119
    gteq_        shift, and go to state 120
    '|'          shift, and go to state 121

    '{'       reduce using rule 100 (if_cond)
    ';'       reduce using rule 117 (expr_stmt)
    $default  reduce using rule 118 (expr_list)

    assign_op  go to state 225


State 202

   81 return_stmt: return_ ';' .

    $default  reduce using rule 81 (return_stmt)


State 203

   80 return_stmt: return_ expr . ';'
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    '|'        shift, and go to state 121
    ';'        shift, and go to state 238


State 204

   91 switch_cond: simple_stmt . ';' expr
   92            | simple_stmt . ';'

    ';'  shift, and go to state 239


State 205

   84 switch_stmt: switch_ switch_cond . '{' case_clause_list '}'

    '{'  shift, and go to state 240


State 206

   72 assign_stmt: expr . assign_op expr
   74 inc_stmt: expr . incre_
   75 dec_stmt: expr . decre_
   93 switch_cond: expr .
  117 expr_stmt: expr .
  118 expr_list: expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'          shift, and go to state 103
    '-'          shift, and go to state 104
    '*'          shift, and go to state 105
    '/'          shift, and go to state 106
    '%'          shift, and go to state 107
    '&'          shift, and go to state 108
    '^'          shift, and go to state 109
    ls_          shift, and go to state 110
    rs_          shift, and go to state 111
    unknown_     shift, and go to state 112
    add_eq_      shift, and go to state 212
    minus_eq_    shift, and go to state 213
    mult_eq_     shift, and go to state 214
    div_eq_      shift, and go to state 215
    mod_eq_      shift, and go to state 216
    amp_eq_      shift, and go to state 217
    vb_eq_       shift, and go to state 218
    caret_eq_    shift, and go to state 219
    ls_eq_       shift, and go to state 220
    rs_eq_       shift, and go to state 221
    unknown_eq_  shift, and go to state 222
    and_         shift, and go to state 113
    or_          shift, and go to state 114
    incre_       shift, and go to state 223
    decre_       shift, and go to state 224
    equality_    shift, and go to state 115
    '<'          shift, and go to state 116
    '>'          shift, and go to state 117
    not_eq_      shift, and go to state 118
    lteq_        shift, and go to state 119
    gteq_        shift, and go to state 120
    '|'          shift, and go to state 121

    '{'       reduce using rule 93 (switch_cond)
    ';'       reduce using rule 117 (expr_stmt)
    $default  reduce using rule 118 (expr_list)

    assign_op  go to state 225


State 207

   76 print_stmt: print_ '(' . expr_list ')' ';'
   77           | print_ '(' . ')' ';'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    ')'          shift, and go to state 241
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    expr_list     go to state 242
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 79
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 208

   78 println_stmt: println_ '(' . expr_list ')' ';'
   79             | println_ '(' . ')' ';'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    ')'          shift, and go to state 243
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    expr_list     go to state 244
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 79
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 209

   64 simple_stmt: simple_stmt_v ';' .

    $default  reduce using rule 64 (simple_stmt)


State 210

   71 assign_stmt: expr_list '=' . expr_list

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    expr_list     go to state 245
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 79
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 211

   73 short_decl: expr_list decla_ . expr_list

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    expr_list     go to state 246
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 79
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 212

  106 assign_op: add_eq_ .

    $default  reduce using rule 106 (assign_op)


State 213

  107 assign_op: minus_eq_ .

    $default  reduce using rule 107 (assign_op)


State 214

  108 assign_op: mult_eq_ .

    $default  reduce using rule 108 (assign_op)


State 215

  109 assign_op: div_eq_ .

    $default  reduce using rule 109 (assign_op)


State 216

  110 assign_op: mod_eq_ .

    $default  reduce using rule 110 (assign_op)


State 217

  111 assign_op: amp_eq_ .

    $default  reduce using rule 111 (assign_op)


State 218

  112 assign_op: vb_eq_ .

    $default  reduce using rule 112 (assign_op)


State 219

  113 assign_op: caret_eq_ .

    $default  reduce using rule 113 (assign_op)


State 220

  114 assign_op: ls_eq_ .

    $default  reduce using rule 114 (assign_op)


State 221

  115 assign_op: rs_eq_ .

    $default  reduce using rule 115 (assign_op)


State 222

  116 assign_op: unknown_eq_ .

    $default  reduce using rule 116 (assign_op)


State 223

   74 inc_stmt: expr incre_ .

    $default  reduce using rule 74 (inc_stmt)


State 224

   75 dec_stmt: expr decre_ .

    $default  reduce using rule 75 (dec_stmt)


State 225

   72 assign_stmt: expr assign_op . expr

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 247
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 226

   50 field_decl: id_list type .

    $default  reduce using rule 50 (field_decl)


State 227

  156 append: append_ '(' id_ ',' . expr_list ')'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    expr_list     go to state 248
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 79
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 228

  164 type_cast: basic_type '(' expr ')' .

    $default  reduce using rule 164 (type_cast)


State 229

  169 slice: '[' ':' ']' .

    $default  reduce using rule 169 (slice)


State 230

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr
  168 slice: '[' ':' expr . ']'
  171      | '[' ':' expr . ':' expr ']'

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    ']'        shift, and go to state 249
    ':'        shift, and go to state 250
    '|'        shift, and go to state 121


State 231

  165 index: '[' expr ']' .

    $default  reduce using rule 165 (index)


State 232

  166 slice: '[' expr ':' . expr ']'
  167      | '[' expr ':' . ']'
  170      | '[' expr ':' . expr ':' expr ']'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    ']'          shift, and go to state 251
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 252
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 233

  154 func_call: primary_expr '(' expr_list ')' .

    $default  reduce using rule 154 (func_call)


State 234

   90 for_stmt_clause: simple_stmt_v ';' . condition ';' simple_stmt_v

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    $default  reduce using rule 89 (condition)

    basic_type    go to state 74
    condition     go to state 253
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 254
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 235

   85 for_stmt: for_ for_clause block .

    $default  reduce using rule 85 (for_stmt)


State 236

  101 if_cond: simple_stmt expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    '|'        shift, and go to state 121

    $default  reduce using rule 101 (if_cond)


State 237

   82 if_stmt: if_ if_cond block .
   83        | if_ if_cond block . else_ else_block

    else_  shift, and go to state 255

    $default  reduce using rule 82 (if_stmt)


State 238

   80 return_stmt: return_ expr ';' .

    $default  reduce using rule 80 (return_stmt)


State 239

   91 switch_cond: simple_stmt ';' . expr
   92            | simple_stmt ';' .

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    $default  reduce using rule 92 (switch_cond)

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 256
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 240

   84 switch_stmt: switch_ switch_cond '{' . case_clause_list '}'

    $default  reduce using rule 96 (case_clause_list)

    case_clause_list  go to state 257


State 241

   77 print_stmt: print_ '(' ')' . ';'

    ';'  shift, and go to state 258


State 242

   76 print_stmt: print_ '(' expr_list . ')' ';'
  119 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 259
    ','  shift, and go to state 102


State 243

   79 println_stmt: println_ '(' ')' . ';'

    ';'  shift, and go to state 260


State 244

   78 println_stmt: println_ '(' expr_list . ')' ';'
  119 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 261
    ','  shift, and go to state 102


State 245

   71 assign_stmt: expr_list '=' expr_list .
  119 expr_list: expr_list . ',' expr

    ','  shift, and go to state 102

    $default  reduce using rule 71 (assign_stmt)


State 246

   73 short_decl: expr_list decla_ expr_list .
  119 expr_list: expr_list . ',' expr

    ','  shift, and go to state 102

    $default  reduce using rule 73 (short_decl)


State 247

   72 assign_stmt: expr assign_op expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    '|'        shift, and go to state 121

    $default  reduce using rule 72 (assign_stmt)


State 248

  119 expr_list: expr_list . ',' expr
  156 append: append_ '(' id_ ',' expr_list . ')'

    ')'  shift, and go to state 262
    ','  shift, and go to state 102


State 249

  168 slice: '[' ':' expr ']' .

    $default  reduce using rule 168 (slice)


State 250

  171 slice: '[' ':' expr ':' . expr ']'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 263
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 251

  167 slice: '[' expr ':' ']' .

    $default  reduce using rule 167 (slice)


State 252

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr
  166 slice: '[' expr ':' expr . ']'
  170      | '[' expr ':' expr . ':' expr ']'

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    ']'        shift, and go to state 264
    ':'        shift, and go to state 265
    '|'        shift, and go to state 121


State 253

   90 for_stmt_clause: simple_stmt_v ';' condition . ';' simple_stmt_v

    ';'  shift, and go to state 266


State 254

   88 condition: expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    '|'        shift, and go to state 121

    $default  reduce using rule 88 (condition)


State 255

   83 if_stmt: if_ if_cond block else_ . else_block

    if_  shift, and go to state 134
    '{'  shift, and go to state 50

    block       go to state 267
    block_tmp   go to state 53
    if_stmt     go to state 268
    else_block  go to state 269


State 256

   91 switch_cond: simple_stmt ';' expr .
  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    '|'        shift, and go to state 121

    $default  reduce using rule 91 (switch_cond)


State 257

   84 switch_stmt: switch_ switch_cond '{' case_clause_list . '}'
   95 case_clause_list: case_clause_list . case_clause

    case_     shift, and go to state 270
    default_  shift, and go to state 271
    '}'       shift, and go to state 272

    case_clause  go to state 273
    switch_case  go to state 274


State 258

   77 print_stmt: print_ '(' ')' ';' .

    $default  reduce using rule 77 (print_stmt)


State 259

   76 print_stmt: print_ '(' expr_list ')' . ';'

    ';'  shift, and go to state 275


State 260

   79 println_stmt: println_ '(' ')' ';' .

    $default  reduce using rule 79 (println_stmt)


State 261

   78 println_stmt: println_ '(' expr_list ')' . ';'

    ';'  shift, and go to state 276


State 262

  156 append: append_ '(' id_ ',' expr_list ')' .

    $default  reduce using rule 156 (append)


State 263

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr
  171 slice: '[' ':' expr ':' expr . ']'

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    ']'        shift, and go to state 277
    '|'        shift, and go to state 121


State 264

  166 slice: '[' expr ':' expr ']' .

    $default  reduce using rule 166 (slice)


State 265

  170 slice: '[' expr ':' expr ':' . expr ']'

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 278
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 266

   90 for_stmt_clause: simple_stmt_v ';' condition ';' . simple_stmt_v

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    $default  reduce using rule 70 (simple_stmt_v)

    basic_type     go to state 74
    simple_stmt_v  go to state 279
    assign_stmt    go to state 145
    short_decl     go to state 146
    inc_stmt       go to state 147
    dec_stmt       go to state 148
    expr_stmt      go to state 157
    expr_list      go to state 158
    operand        go to state 76
    operand_name   go to state 77
    literal        go to state 78
    expr           go to state 159
    unary_op       go to state 80
    func_call      go to state 81
    append         go to state 82
    primary_expr   go to state 83
    type_cast      go to state 84


State 267

  102 else_block: block .

    $default  reduce using rule 102 (else_block)


State 268

  103 else_block: if_stmt .

    $default  reduce using rule 103 (else_block)


State 269

   83 if_stmt: if_ if_cond block else_ else_block .

    $default  reduce using rule 83 (if_stmt)


State 270

   98 switch_case: case_ . expr_list

    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    basic_type    go to state 74
    expr_list     go to state 280
    operand       go to state 76
    operand_name  go to state 77
    literal       go to state 78
    expr          go to state 79
    unary_op      go to state 80
    func_call     go to state 81
    append        go to state 82
    primary_expr  go to state 83
    type_cast     go to state 84


State 271

   99 switch_case: default_ .

    $default  reduce using rule 99 (switch_case)


State 272

   84 switch_stmt: switch_ switch_cond '{' case_clause_list '}' .

    $default  reduce using rule 84 (switch_stmt)


State 273

   95 case_clause_list: case_clause_list case_clause .

    $default  reduce using rule 95 (case_clause_list)


State 274

   97 case_clause: switch_case . ':' stmt_list

    ':'  shift, and go to state 281


State 275

   76 print_stmt: print_ '(' expr_list ')' ';' .

    $default  reduce using rule 76 (print_stmt)


State 276

   78 println_stmt: println_ '(' expr_list ')' ';' .

    $default  reduce using rule 78 (println_stmt)


State 277

  171 slice: '[' ':' expr ':' expr ']' .

    $default  reduce using rule 171 (slice)


State 278

  129 expr: expr . '*' expr
  130     | expr . '/' expr
  131     | expr . '%' expr
  132     | expr . '&' expr
  133     | expr . unknown_ expr
  134     | expr . ls_ expr
  135     | expr . rs_ expr
  136     | expr . '|' expr
  137     | expr . '^' expr
  138     | expr . '-' expr
  139     | expr . '+' expr
  140     | expr . equality_ expr
  141     | expr . '<' expr
  142     | expr . '>' expr
  143     | expr . lteq_ expr
  144     | expr . gteq_ expr
  145     | expr . not_eq_ expr
  146     | expr . and_ expr
  147     | expr . or_ expr
  170 slice: '[' expr ':' expr ':' expr . ']'

    '+'        shift, and go to state 103
    '-'        shift, and go to state 104
    '*'        shift, and go to state 105
    '/'        shift, and go to state 106
    '%'        shift, and go to state 107
    '&'        shift, and go to state 108
    '^'        shift, and go to state 109
    ls_        shift, and go to state 110
    rs_        shift, and go to state 111
    unknown_   shift, and go to state 112
    and_       shift, and go to state 113
    or_        shift, and go to state 114
    equality_  shift, and go to state 115
    '<'        shift, and go to state 116
    '>'        shift, and go to state 117
    not_eq_    shift, and go to state 118
    lteq_      shift, and go to state 119
    gteq_      shift, and go to state 120
    ']'        shift, and go to state 282
    '|'        shift, and go to state 121


State 279

   90 for_stmt_clause: simple_stmt_v ';' condition ';' simple_stmt_v .

    $default  reduce using rule 90 (for_stmt_clause)


State 280

   98 switch_case: case_ expr_list .
  119 expr_list: expr_list . ',' expr

    ','  shift, and go to state 102

    $default  reduce using rule 98 (switch_case)


State 281

   97 case_clause: switch_case ':' . stmt_list

    $default  reduce using rule 52 (stmt_list)

    stmt_list  go to state 283


State 282

  170 slice: '[' expr ':' expr ':' expr ']' .

    $default  reduce using rule 170 (slice)


State 283

   51 stmt_list: stmt_list . stmt
   97 case_clause: switch_case ':' stmt_list .

    break_       shift, and go to state 131
    continue_    shift, and go to state 132
    for_         shift, and go to state 133
    if_          shift, and go to state 134
    return_      shift, and go to state 135
    switch_      shift, and go to state 136
    type_        shift, and go to state 9
    var_         shift, and go to state 10
    int_         shift, and go to state 31
    float_       shift, and go to state 32
    bool_        shift, and go to state 33
    rune_        shift, and go to state 34
    string_      shift, and go to state 35
    print_       shift, and go to state 137
    println_     shift, and go to state 138
    append_      shift, and go to state 63
    '+'          shift, and go to state 64
    '-'          shift, and go to state 65
    '^'          shift, and go to state 66
    '!'          shift, and go to state 67
    '{'          shift, and go to state 50
    '('          shift, and go to state 68
    int_lit_     shift, and go to state 69
    float_lit_   shift, and go to state 70
    string_lit_  shift, and go to state 71
    rune_lit_    shift, and go to state 72
    id_          shift, and go to state 73

    ';'       reduce using rule 70 (simple_stmt_v)
    $default  reduce using rule 97 (case_clause)

    decl           go to state 140
    block          go to state 141
    block_tmp      go to state 53
    var_decl       go to state 14
    type_decl      go to state 15
    basic_type     go to state 74
    stmt           go to state 142
    simple_stmt    go to state 143
    simple_stmt_v  go to state 144
    assign_stmt    go to state 145
    short_decl     go to state 146
    inc_stmt       go to state 147
    dec_stmt       go to state 148
    print_stmt     go to state 149
    println_stmt   go to state 150
    return_stmt    go to state 151
    if_stmt        go to state 152
    switch_stmt    go to state 153
    for_stmt       go to state 154
    break_stmt     go to state 155
    cont_stmt      go to state 156
    expr_stmt      go to state 157
    expr_list      go to state 158
    operand        go to state 76
    operand_name   go to state 77
    literal        go to state 78
    expr           go to state 159
    unary_op       go to state 80
    func_call      go to state 81
    append         go to state 82
    primary_expr   go to state 83
    type_cast      go to state 84
